from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound
def run(environment):
    name = 'source/dev/rpc-console.html'

    def root(context, environment=environment):
        parent_template = None
        if 0: yield None
        parent_template = environment.get_template('layouts/dev.html', 'source/dev/rpc-console.html')
        for name, parent_block in parent_template.blocks.iteritems():
            context.blocks.setdefault(name, []).append(parent_block)
        for event in parent_template.root_render_func(context):
            yield event

    def block_panel_content(context, environment=environment):
        if 0: yield None
        yield u'\n\n<style>\n\n\t#playground\n\t{\n\t}\n\n\t#playground ul.nav\n\t{\n\t\tlist-style:none;\n\t\tmargin:0;\n\t\ttext-indent:none;\n\t\tpadding-top: 10px;\n\t\tpadding-bottom: 10px;\n\t\tmargin-top: 10px;\n\t\tmargin-bottom: 20px;\n\n\t}\n\t#playground ul.nav li\n\t{\n\t\tlist-style:none;\n\t\ttext-indent:none;\n\t\tdisplay:inline;\n\t\tpadding: 3px;\n\t\tpadding-right: 15px;\n\t\tpadding-left: 15px;\n\t\tborder-right: 1px solid white;\n\t}\n\t#playground ul.nav li.last\n\t{\n\t\tborder-right: none;\n\t}\n\t#playground ul.nav li.current a\n\t{\n\t\tbackground: #666;\t\t\n\t}\n\t#playground ul.nav li a\n\t{\n\t\tbackground: #333;\t\t\n\t\tborder-radius: 5px;\n\t\tpadding: 7px;\n\t\tcolor: white;\n\t\ttext-decoration:none;\n\t}\n\tdiv.navcolumn\n\t{\n\t\tmargin-left: 25px;\n\t\tpadding-left: 5px;\n\t\tpadding-right: 5px;\n\t}\n\tdiv.navcolumn span\n\t{\n\t}\n\tdiv.navcolumn input\n\t{\n\t\twidth:75px;\n\t\tmargin-left:15px;\n\t\ttext-align:right;\n\t}\n\tdiv.navcolumn input.long\n\t{\n\t\twidth: 150px !important;\n\t}\n\tdiv.playgroundView.hidden\n\t{\n\t\topacity: 0;\n\t}\n\t\n\t#operations\n\t{\n\t\twidth: 20%;\n\t}\n\t\n\t#playgroundContent\n\t{\n\t\twidth: 78%;\n\t}\n\t\n\t.contentbox\n\t{\n\t\tpadding: 10px;\n\t}\n\t\n\t#api_response_type, #api_response_freshness\n\t{\n\t\tbackground: white;\n\t\tcolor: black;\n\t\tfont-size:13px;\n\t}\n\t\n\t#api_response_type\n\t{\n\t\twidth: 120px;\n\t\tmargin-left: 5px;\t\t\n\t}\n\t\n\t#api_response_freshness\n\t{\n\t\twidth: 90px;\n\t\tmargin-left: 5px;\n\t\ttext-align:left;\n\t\tfont-weight: bold;\n\t}\n\t\n\t#responseDetails\n\t{\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\t\n\t#responseType\n\t{\n\t\tmargin-right: 15px;\n\t}\n\t\n\t#responseFreshness\n\t{\n\t\t\n\t}\n\t\n\thr\n\t{\n\t\tmargin-top: .8em;\n\t\tmargin-bottom: .5em;\n\t}\n\n</style>\n\n<script type=\'text/javascript\'>\n\n\t// Shortcut global vars\n\t_lastRequest = null; // the last RPC request\n\t_lastResponse = null; // the last RPC response\t\n\t_lastError = null; // last RPC error encountered\n\t\n\t// State vars\n\t_current_view = null;\n\t_original_data = {};\n\n\t// Config\n\t_sample_datastore_entity = \'ag9kZXZ-ZmF0LWNhdC1tYXByEAsSCEJvdW5kYXJ5IgJBSww\'; // schema record for "Person"\n\t\n\t_sample_datastore_entities = [\'ag9kZXZ-ZmF0LWNhdC1tYXByIwsSBlNjaGVtYSIXb2JqZWN0LmJ1c2luZXNzLkNvbXBhbnkM\',\n\t\t\t\t\t\t\t\t\t\'ag9kZXZ-ZmF0LWNhdC1tYXByJwsSBlNjaGVtYSIbb2JqZWN0Lmdlby5ib3VuZGFyeS5VU1N0YXRlDA\',\n\t\t\t\t\t\t\t\t\t\'ag9kZXZ-ZmF0LWNhdC1tYXByIQsSBlNjaGVtYSIVb2JqZWN0Lm5hdHVyYWwuUGVyc29uDA\',\n\t\t\t\t\t\t\t\t\t\'ag9kZXZ-ZmF0LWNhdC1tYXByIgsSBlNjaGVtYSIWcmVsYXRpb24uc29jaWFsLkZhbWlseQw\',\n\t\t\t\t\t\t\t\t\t\'ag9kZXZ-ZmF0LWNhdC1tYXByJgsSBlNjaGVtYSIacmVsYXRpb24uc29jaWFsLkZyaWVuZHNoaXAM\',\n\t\t\t\t\t\t\t\t\t\'ag9kZXZ-ZmF0LWNhdC1tYXByKAsSBlNjaGVtYSIccmVsYXRpb24uc29jaWFsLlJlbGF0aW9uc2hpcAw\']\n\t\n\t_sample_origin_node = \'ag9kZXZ-ZmF0LWNhdC1tYXByFgsSBk9iamVjdBgHDAsSBE5vZGUYAQw\'; // first node in the database\n\n\t// Util & Callbacks\n\tfunction setRPCStatus(text, color)\n\t{\n\t\t$(\'#api_request_status\').val(text.toUpperCase()).css({color: color});\n\t}\n\tfunction setRPCFreshness(text, color)\n\t{\n\t\t$(\'#api_response_freshness\').val(text.toUpperCase()).css({color: color});\n\t}\n\tfunction displayRequest(request)\n\t{\n\t\t_lastRequest = request;\n\t\t\n\t\t// Dump raw values\n\t\t$(\'#api_request_id\').val(request.id); // set request id\n\t\t$(\'#api_request_api\').val(request.request.api); // set request api\n\t\t$(\'#api_request_method\').val(request.request.method); // set request method\n\t\t$(\'#api_request_async\').val(request.request.ajax.async.toString()); // set if request is async\n\t\t$(\'#api_request_params\').val(JSON.stringify(request.request.params)); // dump request params\n\t\t$(\'#api_request_action\').val(request.request.action); // dump request action\n\t\t$(\'#api_request_content\').val(JSON.stringify(request.request)); // stringify request to json raw\n\t\trequest_copypaste.setText($(\'#api_request_content\').val());\n\t\trequest_copypaste.show();\t\n\t}\n\tfunction rpcSuccess(response, responsetype, fullresponse)\n\t{\n\t\t_lastResponse = response;\n\t\tconsole.log(\'RPC Success: \', response);\n\t\t$(\'#api_response_content\').val(JSON.stringify(fullresponse));\n\t\tsetRPCStatus(\'success!\', \'green\');\n\t\t\n\t\tif (fullresponse.flags.freshness == \'FRESH\')\n\t\t{\n\t\t\tsetRPCFreshness(\'FRESH\', \'green\');\t\t\t\n\t\t}\n\t\t\n\t\telse if (fullresponse.flags.freshness == \'CACHED\')\n\t\t{\n\t\t\tsetRPCFreshness(\'CACHED\', \'blue\');\n\t\t}\n\t\t$(\'#api_response_type\').val(responsetype);\n\t\t\n\t\tresponse_copypaste.setText($(\'#api_response_content\').val());\n\t\tresponse_copypaste.show();\n\t}\n\tfunction rpcFailure(response)\n\t{\n\t\tsetRPCStatus(\'error!\', \'red\');\n\t\t_lastError = response;\n\t\t_lastResponse = response;\n\t\tconsole.log(\'RPC Failure: \', response);\n\t\t$(\'#api_response_content\').val(JSON.stringify(response));\t\t\n\t}\n\tcallbacks = {\n\t\tsuccess: rpcSuccess,\n\t\tfailure: rpcFailure\n\t};\n\tfunction doRemoteRequest(method, params)\n\t{\n\t\t_original_data = {};\n\t\tdisplayRequest(method(params).fulfill(callbacks));\n\t}\n\tfunction playground(api, method, params)\n\t{\n\t\tsetRPCStatus(\'sending...\', \'blue\');\n\t\tdoRemoteRequest(fatcatmap.rpc.api[api][method], params);\n\t}\n\tfunction switchView(id)\n\t{\n\t\tnewview = $(\'#\'+id);\n\t\tif (_current_view == null)\n\t\t{\n\t\t\t_current_view = \'raw\';\n\t\t}\n\t\t\n\t\t// Switch nav\n\t\t$("li.naventry").removeClass(\'current\');\n\t\t$("a[data-view="+id+"]").parent().addClass(\'current\');\n\t\t\n\t\t// Switch panel\n\t\t$(\'#\'+_current_view).animate({opacity:0.0}).addClass(\'hidden\');\n\t\tnewview.animate({opacity:1.0}).removeClass(\'hidden\');\n\t\t_current_view = id;\n\t}\n\n</script>\n\n<div id=\'operations\' class=\'floatleft textleft\'>\n\t\n\t<h2>Operations:</h2><br />\n\n\t<ul>\n\t\t<li>System API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'system\', \'hello\');" id=\'sysHello\'>Hello!</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'system\', \'echo\', {message: \'testecho\'});" id=\'sysEcho\'>Echo</a></li>\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\t\t\n\t\t<li>Charts API\n\t\t\t<ul>\n\t\t\t\t<li>No methods yet</li>\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\n\t\t<li>Data API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'data\', \'get\', {key: _sample_datastore_entity});" id=\'getEntity\'>Get Entity</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'data\', \'get\', {keys: _sample_datastore_entities});" id=\'getEntity\'>Get Entity (Multi)</a></li>\t\t\t\t\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\t\t\n\t\t<li>Frame API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'frame\', \'render\', {path: \'dev/test.html\'});" id=\'renderTemplate\'>Render Template</a></li>\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\t\t\n\t\t<li>Graph API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'graph\', \'construct\');" id=\'drawGraph\'>Construct (No Origin)</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'graph\', \'construct\', {origin: _sample_origin_node});" id=\'drawGraphWithOrigin\'>Construct (With Origin)</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'graph\', \'construct\', {degree: 5, limit: 15});" id=\'deepGraph\'>Deep Construct (No Origin)</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'graph\', \'construct\', {degree: 5, limit: 15, origin: _sample_origin_node});" id=\'deepGraphWithOrigin\'>Deep Construct (With Origin)</a></li>\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\t\t\n\t\t<li>Query API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'gql\', {gql:\'SELECT * FROM Schema LIMIT 5\'});" id=\'queryGQL\'>Raw GQL</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'build\', {kind: \'Schema\', filter:[{property:\'type\', value:\'edge\'}], order:[{property: \'path\', direction: \'DSC\'}]});" id=\'queryFilters\'>Raw Filters</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'search\', {query:\'sam gammon\'});" id=\'searchGlobal\'>Global Search</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'search\', {query:\'sam gammon\', scope: {type: \'graph\', subtype: \'Node\'}});" id=\'searchScoped\'>Scoped Search</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'autocomplete\', {fragment: \'sam\'});" id=\'autocompleteGlobal\'>Global Autocomplete</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'query\', \'autocomplete\', {fragment: \'sam\', scope: {type: \'graph\', subtype: \'Node\'}});" id=\'autocompleteScoped\'>Scoped Autocomplete</a></li>\n\t\t\t</ul>\n\t\t</li>\n\t\t<br />\n\t\t\n\t\t<li>Session API\n\t\t\t<ul>\n\t\t\t\t<li><a href="javascript:playground(\'session\', \'checkin\', {token: $.fatcatmap.state.session.getToken()});" id=\'sessionCheckin\'>Checkin</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'session\', \'live\');" id=\'liveStart\'>Start Live Services</a></li>\n\t\t\t\t<li><a href="javascript:playground(\'session\', \'ping\');" id=\'livePing\'>Ping Live Services</a></li>\n\t\t\t</ul>\n\t\t</li>\t\t\t\t\t\n\n\t</ul>\n\n</div>\n\n<div id=\'playgroundContent\' class=\'floatleft textleft\'>\n\t\n\t<div id=\'playground\'>\n\t\t<ul class=\'nav\'>\n\t\t\t<li class=\'current naventry\'><a href=\'javascript:switchView("raw");\' data-view=\'raw\'>Raw View</a></li>\n\t\t\t<li class=\'naventry\'><a href=\'javascript:switchView("pretty");\' data-view=\'pretty\'>Formatted View</a></li>\n\t\t\t<li class=\'naventry\'><a href=\'javascript:switchView("statistics");\' data-view=\'statistics\'>Statistics</a></li>\t\t\t\n\t\t\t<li class=\'naventry\'><a href=\'javascript:switchView("history");\' data-view=\'history\'>History</a></li>\n\t\t\t<li class=\'last naventry\'><a href=\'javascript:switchView("diagnostics");\' data-view=\'diagnostics\'>Diagnostics</a></li>\t\t\t\n\t\t</ul>\n\n\t\t<!-- Raw request/response view -->\n\t\t<div id=\'raw\' class=\'playgroundView\'>\n\t\t\t<div>\n\t\t\t\t\n\t\t\t\t<div class=\'floatleft navcolumn\'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span><b>Request ID: </b></span><input type=\'text\' value=\'\' id=\'api_request_id\' disabled/><br />\n\t\t\t\t\t\t<span><b>Asynchronous: </b></span><input type=\'text\' value=\'\' id=\'api_request_async\' disabled/>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\'floatleft navcolumn\'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span><b>Request API: </b></span><input type=\'text\' value=\'\' id=\'api_request_api\' disabled/><br />\n\t\t\t\t\t\t<span><b>Request Method: </b></span><input type=\'text\' value=\'\' id=\'api_request_method\' disabled/>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\'floatleft navcolumn\'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span><b>Request Action: </b></span><input type=\'text\' value=\'\' id=\'api_request_action\' class=\'long\' disabled/><br />\n\t\t\t\t\t\t<span><b>Request Status: </b></span><input type=\'text\' value=\'\' id=\'api_request_status\' class=\'long bold\' disabled/>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div class=\'clearboth\'></div>\n\t\t\t<hr />\n\n\t\t\t<div class=\'contentbox floatleft\'>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\'floatleft\'>\n\t\t\t\t\t\t<b>API Request:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\'floatright\'>\n\t\t\t\t\t\t<b><div id=\'request_copypaste_wrapper\' class=\'inline relative\'><a id=\'request_copypaste\' href="#">Copy</a></div> / <a id=\'format_request\' href="javascript:DoJSONFormat(\'#api_request_content\', \'request\');" class="">Format</a><a id=\'unformat_request\' href="javascript:DoJSONUnFormat(\'#api_request_content\', \'request\');" class="hidden">Unformat</a></b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\'clearboth\'></div>\n\t\t\t\t<textarea id=\'api_request_content\' style=\'width:400px; padding:5px; height:300px; background:white;\' disabled></textarea>\n\t\t\t</div>\n\n\t\t\t<div class=\'contentbox floatleft\'>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\'floatleft\'>\n\t\t\t\t\t\t<b>API Response:</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\'floatright\'>\n\t\t\t\t\t\t<b><div id=\'response_copypaste_wrapper\' class=\'inline relative\'><a id=\'response_copypaste\' href="#">Copy</a></div> / <a id=\'format_response\' href="javascript:DoJSONFormat(\'#api_response_content\', \'response\');" class="">Format</a><a id=\'unformat_response\' href="javascript:DoJSONUnFormat(\'#api_response_content\', \'response\');" class="hidden">Unformat</a></b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\'clearboth\'></div>\n\t\t\t\t<textarea id=\'api_response_content\' style=\'width:400px; padding:5px; height:300px; background:white;\' disabled></textarea><br />\n\t\t\t\t<div id=\'responseDetails\'>\n\t\t\t\t\t<div id=\'responseType\' class=\'floatleft textleft\'>\n\t\t\t\t\t\t<b>Response Type:</b> <input id=\'api_response_type\' disabled />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\'responseFreshness\' class=\'floatleft textright\'>\n\t\t\t\t\t\t<b>Freshness:</b> <input id=\'api_response_freshness\' disabled />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\'clearboth\'></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<!--A nicely-structured and formatted view of API requests & responses -->\n\t\t<div id=\'pretty\' class=\'hidden playgroundView\'>\n\t\t\t<p>Pretty Printed version</p>\n\t\t</div>\n\t\t\n\t\t<!-- Averaged latency and other statistics for the current playground session -->\n\t\t<div id=\'statistics\' class=\'hidden playgroundView\'>\n\t\t\t<p>Statistics</p>\n\t\t</div>\n\t\t\n\t\t<!-- RPC History of current playground session -->\n\t\t<div id=\'history\' class=\'hidden playgroundView\'>\n\t\t\t<p>History</p>\n\t\t</div>\n\t\t\n\t\t<!-- Diagnostic & utility tools -->\n\t\t<div id=\'diagnostics\' class=\'hidden playgroundView\'>\n\t\t\t<p>Debug/diagnostics</p>\n\t\t</div>\t\t\n\n\t</div>\n\n</div>\n\n<div class=\'clearboth\'></div>\n\n'

    def block_page_title(context, environment=environment):
        if 0: yield None
        yield u'RPC Playground'

    def block_panel_header(context, environment=environment):
        if 0: yield None
        yield u'RPC Playground'

    def block_postsouth(context, environment=environment):
        if 0: yield None
        yield u'\n<script type=\'text/javascript\'>\n\n$(document).ready(function (){\n\t\n\trequest_copypaste = new ZeroClipboard.Client(\'request_copypaste\');\n\trequest_copypaste.hide();\n\n\tresponse_copypaste = new ZeroClipboard.Client(\'response_copypaste\');\n\tresponse_copypaste.hide();\n\t\n})\n\nfunction UnFormatJSON(s_type)\n{\n\treturn JSON.stringify(_original_data[s_type]);\n}\n\nfunction DoJSONUnFormat(selector, s_type)\n{\n\t$(\'#\'+s_type+\'_unformat\').addClass(\'hidden\');\n\t$(\'#\'+s_type+\'_format\').removeClass(\'hidden\');\n\t$(selector).val(UnFormatJSON(s_type));\n}\n\nfunction DoJSONFormat(selector, s_type)\n{\n\t$(\'#\'+s_type+\'_format\').addClass(\'hidden\');\n\t$(\'#\'+s_type+\'_unformat\').removeClass(\'hidden\');\n\t$(selector).val(FormatJSON(JSON.parse($(selector).val()), s_type));\n}\n\nfunction RealTypeOf(v) {\n  if (typeof(v) == "object") {\n    if (v === null) return "null";\n    if (v.constructor == (new Array).constructor) return "array";\n    if (v.constructor == (new Date).constructor) return "date";\n    if (v.constructor == (new RegExp).constructor) return "regex";\n    return "object";\n  }\n  return typeof(v);\n}\n\n// code courtesy of: http://joncom.be/code/javascript-json-formatter/\nfunction FormatJSON(oData, s_type, sIndent) {\n\t_original_data[s_type] = oData;\n    if (arguments.length < 2) {\n        var sIndent = "";\n    }\n    var sIndentStyle = "    ";\n    var sDataType = RealTypeOf(oData);\n\n    // open object\n    if (sDataType == "array") {\n        if (oData.length == 0) {\n            return "[]";\n        }\n        var sHTML = "[";\n    } else {\n        var iCount = 0;\n        $.each(oData, function() {\n            iCount++;\n            return;\n        });\n        if (iCount == 0) { // object is empty\n            return "{}";\n        }\n        var sHTML = "{";\n    }\n\n    // loop through items\n    var iCount = 0;\n    $.each(oData, function(sKey, vValue) {\n        if (iCount > 0) {\n            sHTML += ",";\n        }\n        if (sDataType == "array") {\n            sHTML += ("\\n" + sIndent + sIndentStyle);\n        } else {\n            sHTML += ("\\n" + sIndent + sIndentStyle + "\\"" + sKey + "\\"" + ": ");\n        }\n\n        // display relevant data type\n        switch (RealTypeOf(vValue)) {\n            case "array":\n            case "object":\n                sHTML += FormatJSON(vValue, (sIndent + sIndentStyle));\n                break;\n            case "boolean":\n            case "number":\n                sHTML += vValue.toString();\n                break;\n            case "null":\n                sHTML += "null";\n                break;\n            case "string":\n                sHTML += ("\\"" + vValue + "\\"");\n                break;\n            default:\n                sHTML += ("TYPEOF: " + typeof(vValue));\n        }\n\n        // loop\n        iCount++;\n    });\n\n    // close object\n    if (sDataType == "array") {\n        sHTML += ("\\n" + sIndent + "]");\n    } else {\n        sHTML += ("\\n" + sIndent + "}");\n    }\n\n    // return\n    return sHTML;\n}\n\nfunction SortObject(oData) {\n  var oNewData = {};\n  var aSortArray = [];\n\n  // sort keys\n  $.each(oData, function(sKey) {\n    aSortArray.push(sKey);\n  });\n  aSortArray.sort(SortLowerCase);\n\n  // create new data object\n  $.each(aSortArray, function(i) {\n    if( RealTypeOf(oData[(aSortArray[i])]) == "object" ) {\n      oData[(aSortArray[i])] = SortObject(oData[(aSortArray[i])]);\n    }\n    oNewData[(aSortArray[i])] = oData[(aSortArray[i])];\n  });\n\n  return oNewData;\n\n  function SortLowerCase(a,b) {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n    return ((a < b) ? -1 : ((a > b) ? 1 : 0));\n  }\n}\n\n</script>\n'

    def block_panel_backnav(context, environment=environment):
        l_link = context.resolve('link')
        if 0: yield None
        yield u'<a href="%s">Development Console</a>' % (
            context.call(l_link, 'dev-index'), 
        )

    def block_postnorth(context, environment=environment):
        l_assets = context.resolve('assets')
        if 0: yield None
        yield u'\n<script src="%s"></script>\n' % (
            context.call(environment.getattr(l_assets, 'script'), 'zeroclipboard', 'core'), 
        )

    blocks = {'panel_content': block_panel_content, 'page_title': block_page_title, 'panel_header': block_panel_header, 'postsouth': block_postsouth, 'panel_backnav': block_panel_backnav, 'postnorth': block_postnorth}
    debug_info = '1=9&11=15&3=19&4=23&426=27&5=31&7=38&8=42'
    return locals()