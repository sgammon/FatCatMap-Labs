[buildout]
parts =
    gae_sdk
    gae_tools
    app_lib

# Generate relative paths for eggs so that the buildout can be moved around.
relative-paths = true

# Unzip eggs automatically, if needed.
unzip = true

# Define versions for installed packages.
extends = versions.cfg
versions = versions

# Enable this to save all picked versions in the versions.cfg file.
# extensions = buildout.dumppickedversions
# dump-picked-versions-file = versions.cfg

# Keep internal stuff in a subdirectory.
download-cache = var/downloads
# Buildout bug: it doesn't honor custom egg dir this in parts/buildout/site.py
# Until it is fixed we need to use the standard eggs dir.
# eggs-directory = var/eggs
develop-eggs-directory = var/develop-eggs
parts-directory = var/parts


[gae_sdk]
# Dowloads and extracts the App Engine SDK.
recipe = appfy.recipe.gae:sdk
url = http://googleappengine.googlecode.com/files/google_appengine_1.5.4.zip

[gae_tools]
# Installs appcfg, bulkload_client, bulkloader, dev_appserver, remote_api_shell
# and python executables in the bin directory.
recipe = appfy.recipe.gae:tools
# Add these paths to sys.path in the generated scripts.
extra-paths =
    app
    app/lib
    app/lib/dist

[app_lib]
# Sets the library dependencies for the app.
recipe = appfy.recipe.gae:app_lib
lib-directory = app/lib/dist
use-zipimport = false

# Define the packages to download. Only tipfy is included, but you can add
# others or uncomment the extra lines to add those common packages.

# FOR FUTURE:
#tipfy.ext.acl
#tipfy.ext.appstats
#tipfy.ext.auth
#tipfy.ext.auth.oauth
#tipfy.ext.auth.openid
#tipfy.ext.db
#tipfy.ext.i18n	
#tipfy.ext.mail
#tipfy.ext.session
#xhtml2pdf
#geomodel
#html5lib
#tarn
#python-openid
#reportlab
#pypdf
#boto
#protorpc
#apptrace
#lovely.gae

eggs =
	webapp2
   	babel
    gaepytz
	wtforms
	slimmer
	httpagentparser
	
[development-products]
recipe = infrae.subversion
urls =
    http://appengine-mapreduce.googlecode.com/svn/trunk/python/src/mapreduce mapreduce
	http://appengine-pipeline.googlecode.com/svn/trunk/src/pipeline pipeline

#[closure-compile]
#recipe = c2c.recipe.closurecompile
#compiler = ${download-closure-compile:destination}/compiler.jar
#level = SIMPLE_OPTIMIZATIONS
#input = app/assets/js/static/fcm/rpc-0.1.js app/assets/js/static/fcm/navigation-0.1.js app/assets/js/static/fcm/graph-0.1.js
#output = app/assets/js/static/fcm/combined-0.1.min.js

#[download-closure-compile]
#recipe = hexagonit.recipe.download
#url = http://closure-compiler.googlecode.com/files/compiler-latest.zip

# Don't copy files that match these glob patterns.
ignore-globs =
    *.c
    *.pyc
    *.pyo
    *.so
    */test
    */tests
    */testsuite
    */django
    */sqlalchemy

# Don't install these packages or modules.
ignore-packages =
    distribute
    setuptools
    easy_install
    site
    ssl
    pkg_resources
